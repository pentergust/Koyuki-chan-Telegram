"""–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.

–ü—Ä–æ–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ—Ö–º–æ–∂–Ω–æ—Å—Ç—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞
–∫–Ω–æ–ø–∫—É.

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç
-------------

- back_to_menu: –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
"""

from aiogram import Dispatcher, types

from routers.main_menu import (
    get_welcome_text,  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
# ===========

async def handle_back_to_menu(call: types.CallbackQuery):
    text = await get_welcome_text()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é

    markup = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(
                    text="üìö –°–ø–∏—Å–æ–∫ –¥–∑", callback_data="homework_list"
                )
            ],
            [
                types.InlineKeyboardButton(
                    text="üé• –ó–∞–ø–∏—Å–∏ –≤–µ–±–∏–Ω–∞—Ä–∞", callback_data="webinar_records"
                )
            ],
            [
                types.InlineKeyboardButton(
                    text="‚ùì –ü–æ–º–æ—â—å", callback_data="help"
                )
            ],
            [
                types.InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", callback_data="bot_info"
                )
            ],
        ]
    )

    await call.message.edit_text(
        text, reply_markup=markup, parse_mode="Markdown"
    )


# –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞
# ================

def register_handlers(dp: Dispatcher):
    """–ó–∞–≥—Ä—É–∑—á–∏–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.

    –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.
    –û–Ω–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ä–æ—É—Ç–µ—Ä –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É.
    –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –≤ —Ä–æ—É—Ç–µ—Ä–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º.
    """
    dp.callback_query.register(
        handle_back_to_menu, lambda call: call.data == "back_to_menu"
    )
